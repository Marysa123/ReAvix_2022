create table [Группа](
[Номер_Группы] varchar(20) UNIQUE NOT NULL,
[Полное_Название_группы] varchar(80) NOT NULL)

create table [Преподаватели](
[Номер_Преподавателя] int primary key identity(1,1),
[Имя] varchar(40) NOT NULL,
[Фамилия] varchar(40) NOT NULL,
[Отчество] varchar(40) NOT NULL,
[Логин] varchar(40) UNIQUE NOT NULL,
[Пароль] varchar(40) NOT NULL,
[E_mail] varchar(50) UNIQUE NOT NULL,
[Номер_Телефона] varchar(40) UNIQUE NOT NULL,
[Пол] varchar(7) NOT NULL,
[Дата_Рождения] date NOT NULL,
[Адрес] varchar(120) NOT NULL,
[Специальность] varchar(120) NOT NULL,
[Краткая_Информация] varchar(400) NOT NULL,
[Ведущий_Кружок] varchar(50) NOT NULL,
[FK_Закреплённая_группа] varchar(20)FOREIGN KEY REFERENCES [Группа]([Номер_Группы]),
[Фотография] image)

create table [Студенты](
[Номер_Студента] int primary key identity(1,1),
[Имя] varchar(40) NOT NULL,
[Фамилия] varchar(40) NOT NULL,
[Отчество] varchar(40) NOT NULL,
[Логин] varchar(30) NOT NULL UNIQUE,
[Пароль] varchar(40) NOT NULL,
[E_mail] varchar(50) NOT NULL UNIQUE,
[Номер_Телефона] varchar(40) NOT NULL UNIQUE,
[Номер_телефона_Родителей] varchar(40) NOT NULL,
[Курс] varchar(1) NOT NULL,
[Пол] varchar(7) NOT NULL default 'Мужской',
[Дата_Рождения] date NOT NULL,
[Адрес] varchar(120) NOT NULL,
[Краткая_Информация] varchar(400) NOT NULL,
[FK_Номер_Группы] varchar(20) FOREIGN KEY REFERENCES [Группа] ([Номер_Группы]) NOT NULL,
[Фотография] image)

create table [Пропуски](
[Уважительные_Пропуски] int NOT NULL,
[Неуважительные_Пропуски] int NOT NULL,
[Пропуски_по_болезни] int NOT NULL,
[FK_Номер_Студента] int identity(1,1))

create table [Заметки](
[Номер_заметки] int primary key identity(1,1),
[Текст] varchar(600) NOT NULL,
[Приоритет] varchar(7) not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты]([Номер_Студента]),
[FK_Номер_Преподавателя] int FOREIGN KEY REFERENCES [Преподаватели]([Номер_Преподавателя]))

create table [Предметы](
[Номер_Предмета] int primary key identity(1,1),
[Название_Предмета] varchar(90) NOT NULL,
[Вид_итоговой_Работы] varchar(40) NOT NULL,
[ФИО_Преподавателя] varchar(40) NOT NULL)

create table [Оценки](
[Номер_оценки] int primary key identity(1,1),
[Дата] date not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента),
[FK_Номер_Предмета] int FOREIGN KEY REFERENCES [Предметы](Номер_Предмета),
[Оценка] int not null check ([Оценка] >=2 and [Оценка] <=5),
[Вид_оценочной_Работы] varchar(100) not null)

create table [Оценки_2](
[Номер_оценки] int primary key identity(1,1),
[Дата] date not null,
[ФИО_Студента] varchar(90) NOT NULL,
[Название_Предмета] varchar(120) NOT NULL,
[Оценка] int not null check ([Оценка] >=2 and [Оценка] <=5),
[Вид_оценочной_Работы] varchar(100) not null)


create table [Навыки](
[Номер_Навыка] int primary key identity(1,1),
[Категория_Навыка] varchar(120) NOT NULL,
[Мастерство_Навыка] tinyint check ([Мастерство_Навыка] >=0 and [Мастерство_Навыка] <=10) NOT NULL,
[Описание_Навыка] varchar(400) NOT NULL,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента))

create table [Достижения](
[Номер_Достижения] int primary key identity(1,1) NOT NULL,
[Изображение] image,
[Дополнительное_Изображение] image,
[Место_в_соревновании] varchar(40) not null,
[Место_Проведения] varchar(80) not null,
[Название_Соревнования] varchar(80) not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента))

create table [Кружки](
[Номер_Кружка] int primary key identity(1,1) NOT NULL,
[Название_Кружка] varchar(60) NOT NULL)

create table [Специальности](
[Номер_Специальности] int primary key identity(1,1) NOT NULL,
[Название_Специальности] varchar(120) NOT NULL)

create table [Категории_Навыка](
[Номер_Категории] int primary key identity(1,1) NOT NULL,
[Название_Категории] varchar(70) NOT NULL)

--Триггеры
CREATE TRIGGER [Студенты_Добавление_Пропусков]
ON [Студенты]
AFTER INSERT
AS INSERT [Пропуски] values ('0','0','0')

use db_ReAvix

drop table Достижения
drop table Навыки
drop table Оценки
drop table Предметы
drop table Студенты
drop table Группа
drop table Пропуски
drop table Преподаватели
drop table Заметки



drop table Кружки
drop table Специальности
drop table Категории_Навыка

--Работающие запросы
select [Номер_телефона_родителей] from [Студенты] where [Номер_Студента] = 1

select [Номер_Студента] from [Студенты] where [Пароль] = 'Marusa123' and [Логин] = '123qwe123qwe' -- Получение Номер(Id) Студента
select [Фамилия],[Имя] from [Студенты] where [Номер_Студента] = 1 -- Храним где нибудь это значение и подставляем в запросы (По идее).
select [Текст],[Приоритет] from [Заметки] where [FK_Номер_Студента] = 1 -- Получаем Текст и Приоритет заметки, если Номер Студента = 1
select [FK_Номер_Пропуска] from[Студенты] where [Номер_Студента] = 1 -- Запрос для получения Номера ПРопуска в таблице Студенты по номеру студента
select [Уважительные_Пропуски] from [Пропуски] where [FK_Номер_Студента] = 1 --Информация по Номеру пропуска если номер студента = ?
select [Мастерство_Навыка] from Навыки where Номер_Навыка = 1 and FK_Номер_Студента = 1
delete [Навыки] where Номер_Навыка = 1
select Номер_Навыка from Навыки where Номер_Навыка = 1
update Навыки set [Категория_Навыка] = '',Описание_Навыка = '', Мастерство_Навыка = 5 where FK_Номер_Студента = 1 and Номер_Навыка = 1
select [Фамилия] + ' ' + [Имя] + ' ' + Отчество as FIO from [Преподаватели] where [Номер_Преподавателя] = 1 group by [Фамилия],[Имя],Отчество 
SELECT ROUND(AVG(CAST([Оценка] as FLOAT)),1) from [Оценки] WHERE [FK_Номер_Предмета] = 2 and [FK_Номер_Студента] = 2 and DATEPART(MONTH,[Дата]) = DATEPART(MONTH,getdate())
select COUNT(DISTINCT [FK_Номер_Предмета]) from [Оценки] where [FK_Номер_Студента] = 1 --Запрос для понятия того сколько предметов и их номер
select [Название_предмета] from [Предметы] where [Номер_Предмета] = 1 --Запрос для понятия названия предмета
select COUNT(Оценка) from [Оценки] where [FK_Номер_Предмета] = 2 and [FK_Номер_Студента] = 1 and DATEPART(MONTH,[Дата]) = 12
select [Оценка] from [Оценки] where [FK_Номер_Предмета] = 2 and [FK_Номер_Студента] = 1 and DATEPART(MONTH,[Дата]) = 12
select COUNT(Оценка) from [Оценки] where [FK_Номер_Предмета] = 2 and [FK_Номер_Студента] = 1 and [Оценка] = 5 and DATEPART(MONTH,[Дата]) = DATEPART(MONTH,getdate())
SELECT DATEPART(DAY,[Дата]) from [Оценки] WHERE [FK_Номер_Предмета] = 2 and [FK_Номер_Студента] = 1 and DATEPART(MONTH,[Дата]) = 12
SELECT AVG(CAST([Оценка] as FLOAT)) from [Оценки] WHERE [FK_Номер_Предмета] = 3 and [FK_Номер_Студента] = 1 and DATEPART(MONTH,[Дата]) = DATEPART(MONTH,getdate())
update [Преподаватели] set [Дата_Рождения] = '04/06/2003' where [Номер_Преподавателя] = 1
select [FK_Закреплённая_Группа] from [Преподаватели] where [Номер_Преподавателя] = 1
select COUNT(Номер_Студента) from [Студенты],[Преподаватели] where [FK_Номер_Группы] = '25-тп'
select [Фотография] from [Студенты] where [FK_Номер_Группы] = '25-тп'
select [Номер_Телефона]  from [Студенты] where [Номер_Студента] = 1
select DATEPART(MONTH,getdate())
select [Категория_Навыка]  from [Навыки] where [FK_Номер_Студента] = 1
select [Фамилия] + ' ' + [Имя] as FIO from [Студенты] where [Номер_Студента] = 1 group by [Фамилия],[Имя]
select [Курс]  from [Студенты] where [Номер_Студента] = 1
select [Номер_Телефона]  from [Студенты] where [Номер_Студента] = 1
select [E_mail]  from [Студенты] where [Номер_Студента] = 1
SELECT (day FROM [Дата]) FROM [Оценки] WHERE [FK_Номер_Предмета] = 3 and [FK_Номер_Студента] = 1
select DISTINCT ([FK_Номер_Предмета]) from [Оценки] where [FK_Номер_Студента] = 1
select [Вид_итоговой_Работы] from [Предметы] where [Номер_Предмета] = 3
select [Фамилия],[Имя],[Отчество] from [Преподаватели] where [Ведущий_предмет] = 'Русский язык'
select CONCAT([Фамилия] ,[Имя],[Отчество] from [Преподаватели] where [Ведущий_Предмет] = 'Русский язык' or [Дополнительный_Предмет] = 'Русский язык'
select [Фамилия] + ' ' + [Имя]+ ' ' + [Отчество] as FIO from [Преподаватели] where [Ведущий_Предмет] = 'Русский язык' or [Дополнительный_Предмет] = 'Русский язык' group by [Фамилия],[Имя],[Отчество]
select [Фамилия] + ' ' + [Имя] + ' ' + [Отчество] as FIO from [Преподаватели] where [Ведущий_Предмет] = 'Программирование на C#' or [Дополнительный_Предмет] = 'Математика' group by [Фамилия],[Имя],[Отчество]
select [Оценка] from [Оценки] where [Дата] = '2022-12-23' and [FK_Номер_Студента] = 1 and [FK_Номер_Предмета] = 3 --Запрос для понятия оценок студента
select * from [Достижения] where [FK_Номер_Студента] = 2 --Запрос для понятия достижений студента и их количества
select * from [Навыки] where [FK_Номер_Студента] = 2 --Запрос для понятия навыка студента и их количества
select COUNT([Номер_Навыка]) from [Навыки] where [FK_Номер_Студента] = 1
select [Категория_Навыка] from [Навыки] where [Номер_Навыка] = 2
select CAST([Мастерство_Навыка] AS float) * 10 from [Навыки] where [FK_Номер_Студента] = 1
select (Номер_Достижения) FROM Достижения where [FK_Номер_Студента] = 1
select [Название_Соревнования] from Достижения where [Номер_Достижения] = 1
select [Название_Соревнования] from Достижения where [Номер_Достижения] = 1 and [FK_Номер_Студента] = 1
select  DATEPART(YEAR,getdate()) - DATEPART(YEAR,[Дата_Рождения]) from [Студенты] where [Номер_Студента] = 1
select [FK_Закреплённая_Группа] from [Преподаватели] where [Номер_Преподавателя] = 1
select COUNT([Номер_Студента]) from [Студенты] where [FK_Номер_Группы] = '203-б'
select [Фотография] from [Студенты] where [Номер_Студента] = 1
UPDATE [Студенты] set [Имя]  = 'Дмитрий',[Фамилия] = 'Сердцев',[Отчество] = 'Витальевич',[E_mail] = 'ава',[Номер_Телефона] = 'ва',[Номер_телефона_Родителей] = 'вавв',[Курс] = 2,[Дата_рождения] = '12-04-2003',[Адрес] = 'fff',[Краткая_Информация] = 'ававав' where [Номер_Студента] = 1
select [Номер_Студента] from [Студенты] where [FK_Номер_Группы] = '25-тп' --Выясняю номера студентов определенной группы
select [Номер_Предмета] from [Предметы] where [Название предмета] = 'МДК 01.01' --Выясняю номер предмета, названия предметов заранее предопределены.
select [FK_Номер_Предмета],ROUND(AVG([Оценка]),1) as 'Средняя оценка' from [Оценки],[Студенты] where [Оценки].FK_Номер_Студента = [Студенты].[Номер_Студента] and [FK_Номер_Группы] = '25-тп' group by [FK_Номер_Предмета]  --Выясняю среднее по каждому предмету определенной группы
select [FK_Номер_Предмета],COUNT([Оценка]) as 'Кол оценка' from [Оценки],[Студенты] where [Оценки].FK_Номер_Студента = [Студенты].[Номер_Студента] and [FK_Номер_Группы] = '25-тп' and [Оценка] = 5 group by [FK_Номер_Предмета]  --Выясняю количество оценок 5 за каждый предмет 25-тп
select SUM([Уважительные_Пропуски]) as 'Уважительные' from [Пропуски],[Студенты] where [Студенты].Номер_Студента = [Пропуски].[FK_Номер_Студента] and [FK_Номер_Группы] = '25-тп'   --Подсчет уважительных пропусков студентов 25-тп
select TOP(3) MAX([Неуважительные_Пропуски]) as 'Топ Прогульщиков',[Фамилия],[Имя],[Отчество] from [Пропуски],[Студенты] where [Пропуски].Номер_Пропуска = [Студенты].[FK_Номер_Пропуска] and [FK_Номер_Группы] = '203-б' group by [Фамилия],[Имя],[Отчество] order by [Топ Прогульщиков] desc --Топ ррогульщиков
select [Логин] from [Студенты] where [Логин] ='Marusa23'
select [Фотография] from [Студенты] where [Номер_Студента] = NULL
select [Текст] from [Заметки] where [Номер_заметки] = 1
select COUNT(*) from [Заметки] where [FK_Номер_Студента] = '1'
delete [Заметки] where [Номер_заметки] = 3
select cast([Дата_Рождения] as date) from [Студенты] where [Номер_Студента] = 1
select [Ведущий_предмет] from Преподаватели where [Номер_Преподавателя] = 1
SELECT  CAST([Дата_Рождения]  AS DATE) from [Студенты] where [Номер_Студента] = 1
SELECT convert(varchar, [Дата_Рождения], 101) from [Студенты] where [Номер_Студента] = 1
select TOP 3 [Название_Предмета] FROM [Предметы],[Преподаватели] group by [Название_Предмета]
select Номер_Студента from [Студенты] where [FK_Номер_Группы] = '25-тп'
select COUNT(FK_Номер_Предмета) from [Оценки] where [FK_Номер_Студента] = 4
select Уважительные_Пропуски,Неуважительные_пропуски,Пропуски_по_болезни,FK_Номер_Студента from [Пропуски],[Студенты] where FK_Номер_Студента = [Номер_Студента] and [FK_Номер_Группы] = '25-тп' order by Уважительные_Пропуски desc
SELECT AVG(CAST([Оценка] as FLOAT)) from [Оценки] WHERE [FK_Номер_Предмета] = 3 and [FK_Номер_Студента] = 1 and DATEPART(MONTH,[Дата]) = DATEPART(MONTH,getdate())

select Дата,Оценка,Название_Предмета from [Оценки],[Студенты],[Предметы] where FK_Номер_Студента = 3 and [Номер_Студента] = 3 and [FK_Номер_Предмета] = 3
select Дата,Оценка,Вид_оценочной_Работы,Имя,Фамилия,Название_Предмета from [Оценки],[СТуденты],Предметы where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп' and FK_Номер_Предмета = Номер_Предмета 

select FK_Закреплённая_Группа from [Преподаватели] where [Номер_Преподавателя] = 1

select Convert(date, Дата,101)  FK_Номер_Студента,[FK_Номер_Предмета],[Оценка],[Вид_оценочной_работы] from [Оценки],[Студенты] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп'

select [Фамилия],[Имя],[Отчество] from [Студенты] where [FK_Номер_Группы] = '25-тп'

select AVG(CAST([Оценка] as FLOAT)),[Название_Предмета] from [Оценки],[Студенты],[Предметы] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп' and FK_Номер_Предмета = Номер_Предмета group by FK_Номер_Предмета,Название_Предмета
select COUNT([Название_Предмета]) from [Оценки],[Студенты],[Предметы] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп' and FK_Номер_Предмета = Номер_Предмета 

select AVG(CAST([Оценка] as FLOAT)),[Название_Предмета] from [Оценки],[Студенты],[Предметы] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп' and FK_Номер_Предмета = Номер_Предмета group by FK_Номер_Предмета,Название_Предмета
select 
Convert(date, Дата)
update Пропуски set [Уважительные_Пропуски] = 0,[Неуважительные_Пропуски] = 0, [Пропуски_по_болезни] = 0 where [FK_Номер_Студента] = 1
update Оценки set [Дата] = Convert(date,'2022-02-12'),FK_Номер_Студента = 1,FK_Номер_Предмета = 1, Оценка = 4, Вид_оценочной_работы ='Тест' where Номер_оценки = 2

delete from Оценки where [Номер_оценки] = 2
select COUNT (Номер_Оценки) from [Студенты],[Оценки] where [FK_Номер_Студента] = [Номер_Студента]  and FK_Номер_Группы = '25-тп'

select Номер_Оценки from [Студенты],[Оценки] where [FK_Номер_Студента] = [Номер_Студента]  and FK_Номер_Группы = '25-тп'


select FK_Номер_Студента as 'Номер Студента',[Фамилия] + ' ' + [Имя] AS ФИО, Уважительные_Пропуски as 'Уважительные пропуски',Неуважительные_пропуски as 'Неуважительные пропуски',Пропуски_по_болезни as 'Пропуски по болезни' from [Пропуски],[Студенты] where FK_Номер_Студента = [Номер_Студента] and [FK_Номер_Группы] = '25-тп' order by Уважительные_Пропуски desc
CONVERT(date, '07/07/2017' , 101)
select Оценка from [Оценки],[Студенты] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп'

use db_ReAvix

select Номер_оценки as 'Номер строки',Convert(date, Дата,101) as Дата,ФИО_Студента,Оценки_2.Название_Предмета as 'Название Предмета',[Оценка],[Вид_оценочной_работы] as 'Вид оценочной работы' from [Оценки_2],Предметы,Студенты where FK_Номер_Группы = '27-бд' and Оценки_2.Название_Предмета = Предметы.Название_Предмета


select Номер_Студента from Студенты where Фамилия = 'Сердцев' and Имя = 'Дмитрий' and Отчество = 'Витальевич' and FK_Номер_Группы = '27-бд'
select Название_Предмета from Предметы where Название_Предмета = 'Русский язык'
--if
select Номер_Предмета from Предметы where Название_Предмета = '1'
insert into [Оценки_2] values('07/07/2017','Сердцев Дмитрий Витальевич','Русский язык',5,'Тест')
select Номер_Студента from Студенты where Фамилия = 'Сердцев' and Имя = 'Дмитрий' and Отчество = 'Витальевич'
--else 
select Номер_Предмета from Предметы where Номер_Предмета = '1'
insert into [Оценки_2] values('07/07/2017','Сердцев Дмитрий Витальевич','Русский язык',5,'Тест')

select [Название_предмета] from [Предметы] where [Номер_Предмета] = 2
select Номер_Предмета from Предметы_Преподавателя where Название_Предмета = 'Литература' 

select Название_Предмета from Предметы_Преподавателя
update Оценки set FK_Номер_Предмета = 2 WHERE Номер_оценки = 1
select Название_Предмета from Предметы_Преподавателя where FK_Номер_Преподавателя = 1


--Запросы на добавление информации в таблицу Специальности
insert into [Специальности] VALUES('Бухгалтер')
insert into [Специальности] VALUES('Программист на Java')
insert into [Специальности] VALUES('Повар')
insert into [Специальности] VALUES('Программист на C#')
insert into [Специальности] VALUES('Программист на C++р')
insert into [Специальности] VALUES('Повар-Кондитер')
insert into [Специальности] VALUES('Преподаватель')
insert into [Специальности] VALUES('Уборщик')

--Запросы на добавление информации в таблицу Кружки
insert into [Кружки] VALUES('Кружок на Java')
insert into [Кружки] VALUES('Кружок по С#')
insert into [Кружки] VALUES('Кружок по C++')
insert into [Кружки] VALUES('Кружок на HTML')
insert into [Кружки] VALUES('Кружок по CSS')
insert into [Кружки] VALUES('Кружок по JavaScript')
insert into [Кружки] VALUES('Кружок на SQL')
insert into [Кружки] VALUES('Кружок по 1C')

--Запросы на добавление информации в таблицу Группа
insert into [Группа] VALUES('203-б', 'Бухгалтера')
insert into [Группа] VALUES('25-тп', 'Программисты')
insert into [Группа] VALUES('5-п', 'Повара')
insert into [Группа] VALUES('202-б', 'Бухгалтера')
insert into [Группа] VALUES('24-тп', 'Программисты')
insert into [Группа] VALUES('3-п', 'Повара')
insert into [Группа] VALUES('2-ю', 'Программисты')
insert into [Группа] VALUES('24-бд', 'Программисты')


--Запросы на добавление информации в таблицу Название_Категории
insert into [Категории_Навыка] VALUES('Музвыкант')
insert into [Категории_Навыка] VALUES('Программист на C#')
insert into [Категории_Навыка] VALUES('Гимнаст')
insert into [Категории_Навыка] VALUES('Верстка')
insert into [Категории_Навыка] VALUES('Поэзия')
insert into [Категории_Навыка] VALUES('WEB-Технологии')
insert into [Категории_Навыка] VALUES('Разработка сайтов')
insert into [Категории_Навыка] VALUES('Управление аппаратурой')
insert into [Категории_Навыка] VALUES('Организация праздников')
insert into [Категории_Навыка] VALUES('Певец')

--Запросы на добавление информации в таблицу Предметы
insert into [Предметы] VALUES('Русский Язык','Зачёт',NULL)
insert into [Предметы] VALUES('Математика','Экзамен',NULL)
insert into [Предметы] VALUES('Программирование на C#','Тест',NULL)
insert into [Предметы] VALUES('Литература','Зачёт',NULL)
insert into [Предметы] VALUES('Английский язык','Экзамен',NULL)
insert into [Предметы] VALUES('Программирование на C++','Тест',NULL)
insert into [Предметы] VALUES('МДК 01.01','Зачёт',NULL)
insert into [Предметы] VALUES('МДК 02.01','Зачёт',NULL)

--Запросы на добавление информации в таблицу Студенты
insert into [Студенты] VALUES('Александра','Сидорова','Сергеевна','1','2','example1@mail.ru','89074566655','89076794612',1,'Женский','2003-10-12','Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','203-б',null)
insert into [Студенты] VALUES('Дмитрий','Сердцев','Витальевич','2','3','example2@mail.ru','89076787899','89076786612',2,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','203-б',null)
insert into [Студенты] VALUES('Данил','Сердцев','Витальевич','3','4','example3@mail.ru','89076787855','89076786612',3,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','25-тп',null)
insert into [Студенты] VALUES('Александпа','Афанасьев','Витальевич','4','5','exampl3@mail.ru','89076783842','89076786612',4,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','25-тп',null)
insert into [Студенты] VALUES('Мария','Дворцова','Витальевич','5','6','example4@mail.ru','89076787841','89076786612',2,'Женский','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','5-п',null)
insert into [Студенты] VALUES('Алена','Малышенко','Витальевич','6','7','example5@mail.ru','89076787111','89076786612',3,'Женский','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','5-п',null)
insert into [Студенты] VALUES('Данил','Чубич','Витальевич','7','8','example6@mail.ru','89076787222','89076786612',4,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','202-б',null)
insert into [Студенты] VALUES('Никита','Шапошников','Витальевич','8','9','example7@mail.ru','89076787333','89076786612',1,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','202-б',null)
insert into [Студенты] VALUES('Роман','Игошин','Витальевич','9','10','example8@mail.ru','89076787444','89076786612',2,'Мужской','2003-04-15','с.Алтайсикй край Волчихинский район с.Вострово','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','202-б',null)


--Запросы на добавление информации в таблицу Преподаватели
insert into [Преподаватели] VALUES('Ваганов','Сергей','Петрович','666','999','example3@mail.ru','89075454655','М','1994-12-04','с.Алтайсикй край Волчихинский район с.Вострово','Программирование на C#','МДК 01.01','Программист','Кружок по 1C',null)
insert into [Преподаватели] VALUES('Марина','Федорищева','Александровна','777','888','example4@mail.ru','89567454655','Ж','1992-11-12','с.Алтайсикй край Волчихинский район с.Вострово','Программирование на C++','МДК 02.01','Программист','Верстка','Кружок по C#','203-б',null)
insert into [Преподаватели] VALUES('Сергей','Малахов','Владимирович','555','444','example5@mail.ru','89075454777','Мужской','1991-12-04','с.Алтайсикй край Волчихинский район с.Вострово','Математика','МДК 03.01','Программист','В целом, конечно, сплочённость команды профессионалов позволяет выполнить важные задания по разработке системы обучения кадров, соответствующей насущным потребностям. Современные технологии достигли такого уровня, что курс на социально-ориентированный национальный проект предопределяет высокую востребованность экспериментов, поражающих по своей масштабности и грандиозности.','Кружок по C#','25-тп',null)

insert into [Оценки] values('2002-12-13',1,1,4,'Тест');
insert into [Оценки] values('2002-13-02',2,2,5,'Тест');
insert into [Оценки] values('2002-13-02',3,3,3,'Тест');
insert into [Оценки] values('2002-12-22',4,4,3,'Тест');
insert into [Оценки] values('2002-13-02',5,5,2,'Тест');
insert into [Оценки] values('2002-13-02',6,6,5,'Тест');
insert into [Оценки] values('2002-13-02',7,7,4,'Тест');
insert into [Оценки] values('2002-13-02',8,8,3,'Тест');
insert into [Оценки] values('2002-13-02',9,9,2,'Тест');
insert into [Оценки] values('2002-13-02',1,1,4,'Тест');
insert into [Оценки] values('2002-13-02',2,2,2,'Тест');
insert into [Оценки] values('2002-13-02',3,3,4,'Тест');
insert into [Оценки] values('2002-13-02',4,4,5,'Тест');
insert into [Оценки] values('2002-13-02',5,5,3,'Тест');
insert into [Оценки] values('2002-13-02',6,6,3,'Тест');
insert into [Оценки] values('2002-13-02',7,7,3,'Тест');
insert into [Оценки] values('2002-13-02',8,8,2,'Тест');
insert into [Оценки] values('2002-13-02',8,8,2,'Тест');
insert into [Оценки] values('2002-13-02',1,1,5,'Тест');
insert into [Оценки] values('2002-13-02',2,2,4,'Тест');
insert into [Оценки] values('2002-13-02',3,3,3,'Тест');
insert into [Оценки] values('2002-13-02',4,4,2,'Тест');

delete from [Пропуски] where [FK_Номер_Студента] = 1
delete from [Студенты] where [Номер_Студента] = 1

insert into [Предметы] values('Русский язык','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Литература','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Иностранный язык','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('История','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Физическая культура','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы безопасности жизнедеятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Химия','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Обществознание','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Биология','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Родной(русский) язык','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Астрономия','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Математика','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Информатика','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Физика','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы исследовательской деятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы философии','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('История','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Психология общения','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Иностранный язык в профессиональной деятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Элементы высшей математики','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Дискретная математика с элементами математической статистики','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Теория вероятностей и математическая статистика','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Операционные системы и среды','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Архитектура аппаратных средств','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Информационные технологии','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы алгоритмизации и программирования','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Правовое обеспечение профессиональной деятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Безопасность жизнедеятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Экономика отрасли','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы проектирования баз данных','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Стандартизация, сертификация и техническое документирование','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Численные методы','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Компьютерные сети','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Менеджмент в профессиональной деятельности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Разработка программных модулей','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Поддержка и тестирование программных модулей','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Разработка мобильных приложений','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Системное программирование','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Разработка модулей программного обеспечения для компьютерных систем','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Экзамен по профессиональному модулю','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Технология разработки программного обеспечения','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Инструментальные средства разработки программного обеспечения','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Математическое моделирование','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы программирования и конфигурирования в корпоративных информационных системах','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Осуществление интеграции программных модулей','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Внедрение и поддержка компьютерных систем','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Обеспечение качества функционирования компьютерных систем','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Сопровождение и обслуживание программного обеспечения компьютерных систем','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Управление и автоматизация баз данных','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Сертификация информационных систем','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Соадминистрирование баз данных и серверов','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Технология разработки и защиты баз данных','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Разработка, администрирование и защита баз данных','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('География','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Биология','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('История','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Дискретная математика с элементами математической логики','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Основы финансовой грамотности','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Разработка, администрирование и защита баз данных','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Проектирование и разработка интерфейсов пользователя','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Графический дизайн веб-приложений','Экзамен','Федорищева Марина Александровна')
insert into [Предметы] values('Графический дизайн и мультимедия','Экзамен','Федорищева Марина Александровна')


select [ФИО_Преподавателя] from [Предметы] where [Номер_Предмета] = 1

delete from [Студенты]
where [Номер_Студента] = 1


delete from [Пропуски]
where [FK_Номер_Студента] = 1

select Фамилия,Имя,Отчество,Номер_Телефона,Дата_Рождения а [Студенты] where FK_Номер_Группы = '25-тп'

select * from Оценки 
--Отличник 
select FK_Номер_Студента from Оценки where 

select ROUND(AVG(CAST([Оценка] as FLOAT)),1) from [Оценки],[Студенты],[Предметы] where [FK_Номер_Студента] = [Номер_Студента] and FK_Номер_Группы = '25-тп' and FK_Номер_Предмета = Номер_Предмета GROUP BY Номер_Предмета

--Отличники группы
select Фамилия,Имя,Отчество,Оценка from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп' group by Фамилия,Имя,Отчество,Название_Предмета,Оценка having ROUND(AVG(CAST([Оценка] as FLOAT)),1) > 4.5 

select Фамилия,Имя,Отчество,ROUND(AVG(CAST([Оценка] as FLOAT)),1) from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп' group by Фамилия,Имя,Отчество,Название_Предмета,Оценка having ROUND(AVG(CAST([Оценка] as FLOAT)),1) > 4.5

select Фамилия,Имя,Отчество,ROUND(AVG(CAST([Оценка] as FLOAT)),1) as 'Среднее',Название_Предмета from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп' group by Фамилия,Имя,Отчество,Название_Предмета 

select Фамилия,Имя,Отчество from Студенты,Оценки where Номер_Студента NOT IN (select Номер_Студента from Студенты where ROUND(AVG(CAST([Оценка] as FLOAT)),1) < 4.5 group by FK_Номер_Предмета having ROUND(AVG(CAST([Оценка] as FLOAT)),1) < 4.5) and Номер_Студента
in (select Номер_Студента from Студенты group by FK_Номер_Предмета having ROUND(AVG(CAST([Оценка] as FLOAT)),1) >= 4.5)


select Фамилия,Имя,Отчество,Название_Предмета from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета group by Фамилия,Имя,Отчество,Название_Предмета  having ROUND(AVG(CAST([Оценка] as FLOAT)),1) > 4.5

select 

select Фамилия,Имя,Отчество from Cтуденты,Оценки
where ROUND(AVG(CAST([Оценка] as FLOAT)),1) NOT IN (select ROUND(AVG(CAST([Оценка] as FLOAT)),1) from Оценки WHERE FK_Номер_Студента = Номер_Студента  and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп') > 4.5 авава
GROUP BY Фамилия,Имя,Отчество
select Фамилия,Имя,Отчество,ROUND(AVG(CAST([Оценка] as FLOAT)),1) as 'Средняя оценка',Название_Предмета as 'Название предмета' from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета and Фамилия = 'С%' and FK_Номер_Группы = '25-тп' group by Фамилия,Имя,Отчество,Название_Предмета 


 
SELECT  Фамилия,Имя,Отчество
FROM Cтуденты,Оценки
where Оценки.FK_Номер_Студента = Студенты.Номер_Студента
GROUP BY students.id
HAVING AVG(grades.grade) > 4.5;

SELECT Фамилия,Имя,Отчество 
FROM Cтуденты
WHERE id NOT IN (
  SELECT student_id
  FROM marks
  WHERE grade < 4.5
  GROUP BY student_id
)
AND id IN (
  SELECT student_id
  FROM marks
  GROUP BY student_id
  HAVING MIN(grade) >= 4.5
)


select Фамилия,Имя,Отчество,ROUND(AVG(CAST([Оценка] as FLOAT)),1) as 'Средняя оценка',Название_Предмета from Студенты,Оценки,Предметы where FK_Номер_Студента = Номер_Студента and FK_Номер_Предмета = Номер_Предмета and FK_Номер_Группы = '25-тп' group by Фамилия,Имя,Отчество,Название_Предмета 

SELECT  Фамилия,Имя,Отчество FROM Студенты
WHERE EXISTS (
 SELECT *
 FROM Оценки
 WHERE FK_Номер_Студента = Номер_Студента and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп'
 GROUP BY FK_Номер_Предмета
 HAVING ROUND(AVG(CAST([Оценка] as FLOAT)),1) < 3.4 
)
--у которых есть среднее меьнгше 4.4


select Фамилия,Имя,Отчество from Студенты,Оценки where Студенты.Номер_Студента = Оценки.FK_Номер_Студента and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп' GROUP BY FK_Номер_Студента,Фамилия,Имя,Отчество having  ROUND(AVG(CAST([Оценка] as FLOAT)),1) >= 4.5 

select Фамилия,Имя,Отчество from Студенты,Оценки where Студенты.Номер_Студента = Оценки.FK_Номер_Студента and DATEPART(MONTH,getdate()) = DATEPART(MONTH,Дата) and FK_Номер_Группы = '25-тп' GROUP BY Студенты.Номер_Студента,Фамилия,Имя,Отчество having  ROUND(AVG(CAST([Оценка] as FLOAT)),1) < 4.5 and ROUND(AVG(CAST([Оценка] as FLOAT)),1) >= 3.5

