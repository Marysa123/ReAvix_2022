create table [Группа](
[Номер_Группы] varchar(20) UNIQUE NOT NULL,
[Полное_Название_группы] varchar(80) NOT NULL)

create table [Преподаватели](
[Номер_Преподавателя] int primary key identity(1,1),
[Имя] varchar(40) NOT NULL,
[Фамилия] varchar(40) NOT NULL,
[Отчество] varchar(40) NOT NULL,
[Логин] varchar(40) UNIQUE NOT NULL,
[Пароль] varchar(40) NOT NULL,
[E_mail] varchar(40) UNIQUE NOT NULL,
[Номер_Телефона] varchar(40) UNIQUE NOT NULL,
[Пол] varchar(7) NOT NULL default 'Мужской',
[Дата_Рождения] date NOT NULL,
[Адрес] varchar(100) NOT NULL,
[Ведущий_Предмет] varchar(40) NOT NULL,
[Дополнительный_Предмет] varchar(80),
[Специальность] varchar(40) NOT NULL,
[Краткая_Информация] varchar(400) NOT NULL,
[Ведущий_Кружок] varchar(40) NOT NULL,
[FK_Закреплённая_группа] varchar(20)FOREIGN KEY REFERENCES [Группа]([Номер_Группы]),
[Фотография] image)

create table [Студенты](
[Номер_Студента] int primary key identity(1,1),
[Имя] varchar(40) NOT NULL,
[Фамилия] varchar(40) NOT NULL,
[Отчество] varchar(40) NOT NULL,
[Логин] varchar(30) NOT NULL UNIQUE,
[Пароль] varchar(40) NOT NULL,
[E_mail] varchar(40) NOT NULL UNIQUE,
[Номер_Телефона] varchar(40) NOT NULL UNIQUE,
[Номер_телефона_Родителей] varchar(40) NOT NULL,
[Курс] tinyint check ([Курс] >=1 and [Курс] <=4) NOT NULL,
[Пол] varchar(7) NOT NULL default 'Мужской',
[Дата_Рождения] date NOT NULL,
[Адрес] varchar(100) NOT NULL,
[Краткая_Информация] varchar(400) NOT NULL,
[FK_Номер_Группы] varchar(20) FOREIGN KEY REFERENCES [Группа] ([Номер_Группы]) NOT NULL,
[Фотография] image)

create table [Пропуски](
[Уважительные_Пропуски] tinyint NOT NULL,
[Неуважительные_Пропуски] tinyint NOT NULL,
[Пропуски_по_болезни] tinyint NOT NULL,
[FK_Номер_Студента] int identity(1,1))

create table [Заметки](
[Номер_заметки] int primary key identity(1,1),
[Текст] varchar(600) NOT NULL,
[Приоритет] varchar(7) not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты]([Номер_Студента]),
[FK_Номер_Преподавателя] int FOREIGN KEY REFERENCES [Преподаватели]([Номер_Преподавателя]))

create table [Предметы](
[Номер_Предмета] int primary key identity(1,1),
[Название_Предмета] varchar(40) NOT NULL,
[FK_Номер_Преподавателя] int FOREIGN KEY REFERENCES [Преподаватели]([Номер_преподавателя]))

create table [Оценки](
[Дата] date not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента),
[FK_Номер_Предмета] int FOREIGN KEY REFERENCES [Предметы](Номер_Предмета),
[Оценка] decimal not null check ([Оценка] >=2 and [Оценка] <=5))

create table [Навыки](
[Номер_Навыка] int primary key identity(1,1),
[Категория_Навыка] varchar(40) NOT NULL,
[Мастерство_Навыка] tinyint check ([Мастерство_Навыка] >=0 and [Мастерство_Навыка] <=10) NOT NULL,
[Описание_Навыка] varchar(400) NOT NULL,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента))

create table [Достижения](
[Номер_Достижения] int primary key identity(1,1) NOT NULL,
[Изображение] image,
[Дополнительное_Изображение] image,
[Место_в_соревновании] tinyint check ([Место_в_соревновании] >= 1 and [Место_в_соревновании] <=3) not null,
[Место_Проведения] varchar(50) not null,
[Название_Соревнования] varchar(50) not null,
[FK_Номер_Студента] int FOREIGN KEY REFERENCES [Студенты](Номер_Студента))

create table [Кружки](
[Номер_Кружка] int primary key identity(1,1) NOT NULL,
[Название_Кружка] varchar(60) NOT NULL)

create table [Специальности](
[Номер_Специальности] int primary key identity(1,1) NOT NULL,
[Название_Специальности] varchar(60) NOT NULL)

use db_ReAvix

drop table Достижения
drop table Навыки
drop table Оценки
drop table Предметы
drop table Студенты
drop table Группа
drop table Пропуски
drop table Преподаватели
drop table Заметки
drop table Кружки
drop table Специальности

--Работающие запросы
select [Номер_Студента] from [Студенты] where [Пароль] = 'Marusa123' and [Логин] = '123qwe123qwe' -- Получение Номер(Id) Студента
select [Фамилия],[Имя] from [Студенты] where [Номер_Студента] = 1 -- Храним где нибудь это значение и подставляем в запросы (По идее).
select [Текст],[Приоритет] from [Заметки] where [FK_Номер_Студента] = 1 -- Получаем Текст и Приоритет заметки, если Номер Студента = 1
select [FK_Номер_Пропуска] from
[Студенты] where [Номер_Студента] = 1 -- Запрос для получения Номера ПРопуска в таблице Студенты по номеру студента
select * from [Пропуски] where [Номер_пропуска] = 1 --Информация по Номеру пропуска если номер студента = ?

select [FK_Номер_Предмета] from [Оценки] where [FK_Номер_Студента] = 1 --Запрос для понятия того сколько предметов и их номер
select [Название предмета] from [Предметы] where [Номер_Предмета] = 1 --Запрос для понятия названия предмета
select [Оценка] from [Оценки] where [Дата] = '2022-05-12' and [FK_Номер_Студента] = 1 --Запрос для понятия оценок студента

select * from [Достижения] where [FK_Номер_Студента] = 2 --Запрос для понятия достижений студента и их количества
select * from [Навыки] where [FK_Номер_Студента] = 2 --Запрос для понятия навыка студента и их количества

select [Номер_Студента] from [Студенты] where [FK_Номер_Группы] = '25-тп' --Выясняю номера студентов определенной группы
select [Номер_Предмета] from [Предметы] where [Название предмета] = 'МДК 01.01' --Выясняю номер предмета, названия предметов заранее предопределены.
select [FK_Номер_Предмета],ROUND(AVG([Оценка]),1) as 'Средняя оценка' from [Оценки],[Студенты] where [Оценки].FK_Номер_Студента = [Студенты].[Номер_Студента] and [FK_Номер_Группы] = '25-тп' group by [FK_Номер_Предмета]  --Выясняю среднее по каждому предмету определенной группы
select [FK_Номер_Предмета],COUNT([Оценка]) as 'Кол оценка' from [Оценки],[Студенты] where [Оценки].FK_Номер_Студента = [Студенты].[Номер_Студента] and [FK_Номер_Группы] = '25-тп' and [Оценка] = 5 group by [FK_Номер_Предмета]  --Выясняю количество оценок 5 за каждый предмет 25-тп
select SUM([Уважительные_Пропуски]) as 'Уважительные' from [Пропуски],[Студенты] where [Студенты].Номер_Студента = [Пропуски].[FK_Номер_Студента] and [FK_Номер_Группы] = '25-тп'   --Подсчет уважительных пропусков студентов 25-тп
select TOP(3) MAX([Неуважительные_Пропуски]) as 'Топ Прогульщиков',[Фамилия],[Имя],[Отчество] from [Пропуски],[Студенты] where [Пропуски].Номер_Пропуска = [Студенты].[FK_Номер_Пропуска] and [FK_Номер_Группы] = '203-б' group by [Фамилия],[Имя],[Отчество] order by [Топ Прогульщиков] desc --Топ ррогульщиков

select [Логин] from [Студенты] where [Логин] ='Marusa23'

--Тестовые запросы
select COUNT(*) from [Студенты] where [FK_Номер_Группы] = '25-тп'

--Запросы на добавление информации в таблицу Специальности
insert into [Специальности] VALUES('Бухгалтер')
insert into [Специальности] VALUES('Программист на Java')
insert into [Специальности] VALUES('Повар')

--Запросы на добавление информации в таблицу Кружки
insert into [Кружки] VALUES('Кружок на Java')
insert into [Кружки] VALUES('Кружок по С#')
insert into [Кружки] VALUES('Кружок по C++')

--Запросы на добавление информации в таблицу Группа
insert into [Группа] VALUES('203-б', 'Бухгалтера')
insert into [Группа] VALUES('25-тп', 'Программисты')
insert into [Группа] VALUES('5-п', 'Повара')

--Запросы на добавление информации в таблицу Предметы
insert into [Предметы] VALUES('Русский Язык',NULL)
insert into [Предметы] VALUES('Математика',NULL)
insert into [Предметы] VALUES('Программирование на C#',NULL)

--Запросы на добавление информации в таблицу Студенты
insert into [Студенты] VALUES('Игошин','Роман','Сергеевич','322','456','example@mail.ru','89076786655','89076786612',4,'М','2003-12-04','с.Волчиха','Мужик','25-тп',null)
insert into [Студенты] VALUES('Сидорова','Александра','Сергеевна','890','678','example1@mail.ru','89074566655','89076794612',2,'Ж','2003-10-12','с.Волчиха','Девушка','203-б',null)
insert into [Студенты] VALUES('Сердцев','Дмитрий','Витальевич','123','228','dserdtseva@mail.ru','89076787898','89076786612',2,'М','2003-04-15','с.Волчиха','Анимешник','25-тп',null)

--Запросы на добавление информации в таблицу Преподаватели
insert into [Преподаватели] VALUES('Ваганов','Сергей','Петрович','666','999','example3@mail.ru','89075454655','М','1994-12-04','с.Волчиха','Программирование на C#','МДК 01.01','Программист','Кружок по 1C',null)
insert into [Преподаватели] VALUES('Федорищева','Марина','Александровна','777','888','example4@mail.ru','89567454655','Ж','1992-11-12','с.Волчиха','Программирование на C++','МДК 02.01','Программист','Кружок по WEB',null)
insert into [Преподаватели] VALUES('Малахов','Сергей','Владимирович','555','444','example5@mail.ru','89075454777','М','1991-12-04','с.Волчиха','Программирование на C','МДК 03.01','Программист','Кружок по C#',null)

--Запросы на добавление информации в таблицу Пропуски
insert into [Пропуски] VALUES(4,5,6)
insert into [Пропуски] VALUES(12,13,14)
insert into [Пропуски] VALUES(22,33,44)

--Запросы на добавление информации в таблицу Оценки
insert into [Оценки] VALUES('2022-05-12',2,2,4)
insert into [Оценки] VALUES('2022-05-11',3,3,2)
insert into [Оценки] VALUES('2022-05-10',3,4,3)

--Запросы на добавление информации в таблицу Кружки
insert into [Кружки] VALUES('Кружок по 1C')
insert into [Кружки] VALUES('Кружок по WEB')
insert into [Кружки] VALUES('Кружок по C#')

--Запросы на добавление информации в таблицу Навыки
insert into [Навыки] VALUES('Программирование на C++',6,'C++',2)
insert into [Навыки] VALUES('Верстка на HTML',2,'HTML',3)
insert into [Навыки] VALUES('Верстка CSS',2,'CSS',3)

--Запросы на добавление информации в таблицу Достижения
insert into [Достижения] VALUES(NULL,NULL,1,'г.Барнаул','Конкурс по Бухгалтерии',1)
insert into [Достижения] VALUES(NULL,NULL,2,'г.Барнаул','Конкурс по Программированию',2)
insert into [Достижения] VALUES(NULL,NULL,3,'г.Барнаул','Конкурс по Верстке',3)

--Запросы на добавление информации в таблицу Заметки
insert into [Заметки] VALUES('Экзамен 3','Высокий',3,NULL)
insert into [Заметки] VALUES('Экзамен 2','Высокий',2,NULL)
insert into [Заметки] VALUES('Экзамен CSS','Высокий',NULL,3)
insert into [Заметки] VALUES('Экзамен HTML','Высокий',NULL,2)

--Триггеры
CREATE TRIGGER [Студенты_Добавление_Пропусков]
ON [Студенты]
AFTER INSERT
AS INSERT [Пропуски] values ('0','0','0')


delete from [Пропуски]
where [FK_Номер_Студента] = 1

delete from [Студенты]
where [Номер_Студента] = 1